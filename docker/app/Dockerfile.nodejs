# =============================================================================
# Multi-stage Dockerfile for Node.js Applications
# =============================================================================
# Dockerfile otimizado com multi-stage build para aplicações Node.js
# Stages: dependencies, build, production
# =============================================================================

# Stage 1: Dependencies
FROM ghcr.io/pagecloudv1/xcloud-nodejs:latest AS dependencies

USER root

WORKDIR /app

# Copia arquivos de dependências
COPY package*.json ./

# Instala dependências de produção
RUN npm ci --only=production && \
    npm cache clean --force

# Instala todas as dependências (incluindo dev) para build
RUN npm ci && \
    npm cache clean --force

# Stage 2: Build
FROM dependencies AS build

WORKDIR /app

# Copia código fonte
COPY . .

# Executa build (se necessário)
RUN if [ -f "package.json" ] && grep -q "build" package.json; then npm run build; fi

# Stage 3: Production
FROM ghcr.io/pagecloudv1/xcloud-nodejs:latest AS production

USER root

WORKDIR /app

# Copia apenas dependências de produção do stage 1
COPY --from=dependencies --chown=xcloud:xcloud /app/node_modules ./node_modules

# Copia código compilado ou fonte do stage 2
COPY --from=build --chown=xcloud:xcloud /app/dist ./dist 2>/dev/null || \
     COPY --from=build --chown=xcloud:xcloud /app/src ./src
COPY --chown=xcloud:xcloud package*.json ./

# Instala wget para health checks
RUN apk add --no-cache wget && \
    rm -rf /var/cache/apk/*

USER xcloud

# Expõe porta padrão
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:3000/health || exit 1

# Comando padrão
CMD ["node", "dist/index.js"]
